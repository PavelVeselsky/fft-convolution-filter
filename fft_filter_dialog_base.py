# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'fft_filter_dialog_base.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_FFTConvolutionDialogBase(object):
    def setupUi(self, FFTConvolutionDialogBase):
        FFTConvolutionDialogBase.setObjectName("FFTConvolutionDialogBase")
        FFTConvolutionDialogBase.resize(318, 440)
        self.button_box = QtWidgets.QDialogButtonBox(FFTConvolutionDialogBase)
        self.button_box.setGeometry(QtCore.QRect(0, 400, 301, 32))
        self.button_box.setOrientation(QtCore.Qt.Horizontal)
        self.button_box.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.button_box.setObjectName("button_box")
        self.input_label = QtWidgets.QLabel(FFTConvolutionDialogBase)
        self.input_label.setGeometry(QtCore.QRect(10, 20, 101, 17))
        self.input_label.setObjectName("input_label")
        self.input_layer = QgsMapLayerComboBox(FFTConvolutionDialogBase)
        self.input_layer.setGeometry(QtCore.QRect(108, 10, 201, 27))
        self.input_layer.setObjectName("input_layer")
        self.output_label = QtWidgets.QLabel(FFTConvolutionDialogBase)
        self.output_label.setGeometry(QtCore.QRect(10, 60, 101, 17))
        self.output_label.setObjectName("output_label")
        self.output_file = QtWidgets.QLineEdit(FFTConvolutionDialogBase)
        self.output_file.setGeometry(QtCore.QRect(108, 50, 171, 27))
        self.output_file.setObjectName("output_file")
        self.size_label = QtWidgets.QLabel(FFTConvolutionDialogBase)
        self.size_label.setGeometry(QtCore.QRect(160, 100, 41, 17))
        self.size_label.setObjectName("size_label")
        self.size = QtWidgets.QLineEdit(FFTConvolutionDialogBase)
        self.size.setGeometry(QtCore.QRect(250, 90, 61, 27))
        self.size.setPlaceholderText("")
        self.size.setObjectName("size")
        self.filter_type = QtWidgets.QLabel(FFTConvolutionDialogBase)
        self.filter_type.setGeometry(QtCore.QRect(10, 100, 141, 17))
        self.filter_type.setObjectName("filter_type")
        self.edge_detection = QtWidgets.QRadioButton(FFTConvolutionDialogBase)
        self.edge_detection.setGeometry(QtCore.QRect(160, 130, 141, 22))
        self.edge_detection.setObjectName("edge_detection")
        self.smoothing = QtWidgets.QRadioButton(FFTConvolutionDialogBase)
        self.smoothing.setGeometry(QtCore.QRect(10, 130, 116, 22))
        self.smoothing.setChecked(True)
        self.smoothing.setObjectName("smoothing")
        self.optional = QtWidgets.QLabel(FFTConvolutionDialogBase)
        self.optional.setGeometry(QtCore.QRect(100, 170, 66, 17))
        self.optional.setObjectName("optional")
        self.crs_label = QtWidgets.QLabel(FFTConvolutionDialogBase)
        self.crs_label.setGeometry(QtCore.QRect(10, 210, 41, 17))
        self.crs_label.setObjectName("crs_label")
        self.crs = QgsProjectionSelectionWidget(FFTConvolutionDialogBase)
        self.crs.setGeometry(QtCore.QRect(67, 200, 241, 27))
        self.crs.setObjectName("crs")
        self.window = QtWidgets.QCheckBox(FFTConvolutionDialogBase)
        self.window.setEnabled(True)
        self.window.setGeometry(QtCore.QRect(10, 240, 301, 22))
        self.window.setObjectName("window")
        self.rowlabel = QtWidgets.QLabel(FFTConvolutionDialogBase)
        self.rowlabel.setGeometry(QtCore.QRect(10, 280, 131, 17))
        self.rowlabel.setObjectName("rowlabel")
        self.window_rows = QtWidgets.QLineEdit(FFTConvolutionDialogBase)
        self.window_rows.setEnabled(False)
        self.window_rows.setGeometry(QtCore.QRect(180, 270, 40, 27))
        self.window_rows.setObjectName("window_rows")
        self.collabel = QtWidgets.QLabel(FFTConvolutionDialogBase)
        self.collabel.setGeometry(QtCore.QRect(10, 320, 121, 17))
        self.collabel.setObjectName("collabel")
        self.window_cols = QtWidgets.QLineEdit(FFTConvolutionDialogBase)
        self.window_cols.setEnabled(False)
        self.window_cols.setGeometry(QtCore.QRect(180, 310, 40, 27))
        self.window_cols.setObjectName("window_cols")
        self.check_add = QtWidgets.QCheckBox(FFTConvolutionDialogBase)
        self.check_add.setGeometry(QtCore.QRect(10, 360, 291, 22))
        self.check_add.setChecked(True)
        self.check_add.setObjectName("check_add")
        self.output_file_button = QtWidgets.QPushButton(FFTConvolutionDialogBase)
        self.output_file_button.setGeometry(QtCore.QRect(280, 50, 31, 27))
        self.output_file_button.setObjectName("output_file_button")

        self.retranslateUi(FFTConvolutionDialogBase)
        self.button_box.accepted.connect(FFTConvolutionDialogBase.accept)
        self.button_box.rejected.connect(FFTConvolutionDialogBase.reject)
        self.window.toggled['bool'].connect(self.window_rows.setEnabled)
        self.window.toggled['bool'].connect(self.window_cols.setEnabled)
        QtCore.QMetaObject.connectSlotsByName(FFTConvolutionDialogBase)

    def retranslateUi(self, FFTConvolutionDialogBase):
        _translate = QtCore.QCoreApplication.translate
        FFTConvolutionDialogBase.setWindowTitle(_translate("FFTConvolutionDialogBase", "FFT COnvolution Filters"))
        self.input_label.setText(_translate("FFTConvolutionDialogBase", "Input Layer"))
        self.output_label.setText(_translate("FFTConvolutionDialogBase", "Output File"))
        self.size_label.setText(_translate("FFTConvolutionDialogBase", "Size"))
        self.size.setText(_translate("FFTConvolutionDialogBase", "10"))
        self.filter_type.setText(_translate("FFTConvolutionDialogBase", "Filter Type"))
        self.edge_detection.setText(_translate("FFTConvolutionDialogBase", "Edge Detection"))
        self.smoothing.setText(_translate("FFTConvolutionDialogBase", "Smoothing"))
        self.optional.setText(_translate("FFTConvolutionDialogBase", "Optional"))
        self.crs_label.setText(_translate("FFTConvolutionDialogBase", "CRS"))
        self.window.setText(_translate("FFTConvolutionDialogBase", "Apply windowed algorithm"))
        self.rowlabel.setText(_translate("FFTConvolutionDialogBase", "Window Rows"))
        self.collabel.setText(_translate("FFTConvolutionDialogBase", "Window Columns"))
        self.check_add.setText(_translate("FFTConvolutionDialogBase", "Add Output Layer to Map Canvas"))
        self.output_file_button.setText(_translate("FFTConvolutionDialogBase", "..."))

from qgis.gui import QgsMapLayerComboBox, QgsProjectionSelectionWidget
